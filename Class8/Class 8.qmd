---
title: "Class 8 Mini Project"
author: "Erin"
format: html
---
#Outline
Today we will apply the machine learning methods we introduced in the last class on breast cancer biopsy data from fine needle aspiration (FNA).
```{r}
wisc.df <- read.csv("WisconsinCancer.csv")
head(wisc.df) 
```

```{r}
rownames(wisc.df) <- wisc.df$id
wisc.df$id <- NULL
head(wisc.df)
```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
diagnosis
```

```{r}
nrow(wisc.df)
table(wisc.df$diagnosis)
sum(wisc.df$diagnosis == "M")
col_names <- colnames(wisc.df)
mean_columns <- grep("_mean$", col_names)
num_mean_columns <- length(mean_columns)
num_mean_columns
```

Q1: 569 observations
Q2: 212 malignant diagnosis
Q3: 10 variables/features in the data are suffixed with _mean.

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```
We need to sclae our input data before PCA as some of the columns are measured in terms of very different units with different means and different variances. The upshot here is we set 'scale =TRUE' argument to 'prcomp()'
```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
```

Q4: PC1 captures 0.4427 variance
Q5: 3 pricipal components, PC1,2,3.
Q6: 7 principal components

```{r}
biplot(wisc.pr)
```

Q7: The plot is too dense and hard to read.

```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis, 
     xlab = "PC1", ylab = "PC2")
```

Q8: Most malignant samples are on the left (PC1<0), most benign samples are on the right (PC1>0).

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

```{r}
pc1 <- wisc.pr$rotation[,1]
pc1['concave.points_mean']
```


Q9.-0.2608538.
Q10.5 principal components.

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method = "complete")
```

```{r}
plot(wisc.hclust)
abline(h = 19, col="red", lty=2)
```

Q11: 19

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 2)
table(wisc.hclust.clusters, diagnosis)
```
```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 10)
table(wisc.hclust.clusters, diagnosis)
```

Q12.Cluster 2 gives a better cluster vs diagnoses match. Ward2 is the best method.

```{r}
wisc.hclust.better <- cutree(wisc.hclust, k=2)
table(wisc.hclust.better, diagnosis)
```

```{r}
wisc.pr$x[,1:3]
d <- dist(wisc.pr$x[,1:3])
wisc.pr.hclust <- hclust(d, method ='ward.D2')
plot(wisc.pr.hclust)
```
```{r}
grps <- cutree(wisc.pr.hclust,k=2)
head(grps)
```



```{r}
table(grps)
table(diagnosis)
table(diagnosis,grps)
```


```{r}
hc_single <- hclust(data.dist, method = "single")
hc_complete <- hclust(data.dist, method = "complete")
hc_average <- hclust(data.dist, method = "average")
hc_ward <- hclust(data.dist, method = "ward.D2")
plot(hc_single, main = "Single Linkage")
plot(hc_complete, main = "Complete Linkage")
plot(hc_average, main = "Average Linkage")
plot(hc_ward, main = "Ward's Method")
```

Q13. ward.D2 gives most reasonable because it creates groups such that variance is minimized within clusters, it minimizes mismatch with diagnosis.

```{r}
wisc.km <- kmeans(data.dist, centers= 2, nstart= 20)
table(wisc.km$cluster, diagnosis)
table(wisc.hclust.clusters,wisc.km$cluster)
```

